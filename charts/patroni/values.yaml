replicaCount: 3
image:
  # Image was built from
  # https://github.com/BCDevOps/platform-services/tree/master/apps/pgsql/patroni
  repository: image-registry.openshift-image-registry.svc:5000/bcgov/patroni
  tag: latest
  pullPolicy: Always

# Credentials used by Patroni
# https://github.com/zalando/patroni/blob/master/docs/SETTINGS.rst#postgresql
# https://github.com/zalando/spilo/blob/master/ENVIRONMENT.rst
credentials:
  superuser: postgres
  admin: app
  replication: replication
# default db name created after bootstrap  
  dbname: app

# Cluster Name https://patroni.readthedocs.io/en/latest/ENVIRONMENT.html#global-universal
clusterName: pgc
# Distribution Configuration stores
# Please note that only one of the following stores should be enabled.
kubernetes:
  enable: true
# use endpoint instead of configmap, use configmap on OpenShift if cannot run scc mode otherwise you will get 403 error on startup  
  ep: 
    enable: false
# Extra custom environment variables.
env: {}

# ToDO
# walE:
#   # Specifies whether Wal-E should be enabled
#   enable: false
#   # Cron schedule for doing base backups
#   scheduleCronJob: 00 01 * * *
#   # Amount of base backups to retain
#   retainBackups: 2
#   # Path to the S3 or GCS bucket used for WAL-E base backups
#   s3Bucket:
#   gcsBucket:
#   # Name of the secret that holds the credentials to the bucket
#   kubernetesSecret:
#   # Maximum size of the WAL segments accumulated after the base backup to
#   # consider WAL-E restore instead of pg_basebackup
#   backupThresholdMegabytes: 1024
#   # Maximum ratio (in percents) of the accumulated WAL files to the base backup
#   # to consider WAL-E restore instead of pg_basebackup
#   backupThresholdPercentage: 30

persistentVolume:
  enabled: true
  size: 1G
  ## database data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  subPath: "pgroot"
  mountPath: "/home/postgres/pgdata"
  annotations: {}
  accessModes:
    - ReadWriteOnce

resources:
  # If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 300m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 128Mi

# https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
nodeSelector: {}

# https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
affinityTemplate: |
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        topologyKey: "kubernetes.io/hostname"
        labelSelector:
          matchLabels:
            sts:  {{ template "patroni.name" . }}
            release: {{ .Release.Name | quote }}
affinity: {}

rbac:
  # Specifies whether RBAC resources should be created
  create: true

serviceAccount:
  # Specifies whether a ServiceAccount should be created
  create: true
  # The name of the ServiceAccount to use.
  # If not set and create is true, a name is generated using the fullname template
  name:
