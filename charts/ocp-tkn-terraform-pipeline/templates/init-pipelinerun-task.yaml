apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: {{ include "ocp-tkn-terraform-pipeline.fullname" . }}-init
  labels:
    {{- include "ocp-tkn-terraform-pipeline.labels" . | nindent 4 }}
spec:
  params:
    - default: "4.7"
      description: The OpenShift Version to use
      name: version
      type: string
    - description: The name of current pipeline run
      name: currentPipelineRunName
      type: string
  steps:
    - image: "quay.io/openshift/origin-cli:$(params.version)"
      name: oc
      resources: {}
      script: |
        #!/usr/bin/env bash

        [[ "$(workspaces.manifest-dir.bound)" == "true" ]] && \
        cd $(workspaces.manifest-dir.path)
        [[ "$(workspaces.kubeconfig-dir.bound)" == "true" ]] && \
        [[ -f $(workspaces.kubeconfig-dir.path)/kubeconfig ]] && \
        export KUBECONFIG=$(workspaces.kubeconfig-dir.path)/kubeconfig

        while true; do
          PIPELINE_RUN=$(oc get pipelineruns --sort-by=.metadata.creationTimestamp | awk 'NR>1 {if (($5 == "") && ($3 == "Running") ) {print $0}}' | awk 'NR==1 {print $1}')

          if [[ "$(params.currentPipelineRunName)" == "${PIPELINE_RUN}" ]]; then
            echo "All pending pipelineruns have been completed"
            break
          else
            echo "Waiting for ${PIPELINE_RUN} to complete"
            sleep 1m
          fi
        done
  workspaces:
    - description: >-
        The workspace which contains kubernetes manifests which we want to apply
        on the cluster.
      name: manifest-dir
      optional: true
    - description: >-
        The workspace which contains the the kubeconfig file if in case we want
        to run the oc command on another cluster.
      name: kubeconfig-dir
      optional: true
