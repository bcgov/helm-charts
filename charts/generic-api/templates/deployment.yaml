{{- $fullName := include "generic-api.fullname" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "generic-api.fullname" . }}
  labels:
    {{- include "generic-api.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: {{ .Values.rollingUpdate.maxUnavailable }}
      maxSurge: {{ .Values.rollingUpdate.maxSurge }}
  selector:
    matchLabels:
      {{- include "generic-api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "generic-api.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "generic-api.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
{{- if .Values.extraVolumes }}
{{ toYaml .Values.extraVolumes | indent 8 }}
{{- end }}
        {{- range $name, $val := .Values.persistence }}
        - name: {{ $name }}-vol
          emptyDir: {}
        {{- end }}
        - name: config-vol
          configMap:
            name: {{ template "generic-api.fullname" . }}-config
            defaultMode: 0644
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          {{- range $index, $val := .Values.env }}
            {{- if .secure }}
            - name: {{ $index }}
              valueFrom:
                secretKeyRef:
                  name: {{ $fullName }}-secrets
                  key: {{ $index | kebabcase }}
            {{- else }}
            - name: {{ $index }}
              value: {{ .value | quote }}
            {{- end }}
          {{- end }}
          volumeMounts:
{{- if .Values.extraVolumeMounts }}
{{ toYaml .Values.extraVolumeMounts | nindent 12 }}
{{- end }}
          {{- range $name, $val := .Values.persistence }}
            - name: {{ $name }}-vol
              mountPath: {{ .mountPath }}
          {{- end }}
          {{- range .Values.config }}
            - name: config-vol
              mountPath: {{ .mountPath }}
              subPath: {{ .filename }}
              readOnly: true
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.containerPort }}
              protocol: TCP
          {{- if .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
