# Default values for generic-api.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 3

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "1.23.2"

imagePullSecrets: []

hostAliases: []
# - ip: "1.2.3.4"
#   hostnames:
#   - "override.com"

command: {}

args: {}

nameOverride: ""
fullnameOverride: ""

podSecurityContext:
  {}
  # fsGroup: 1010820000

securityContext:
  {}
  # runAsUser: 1010820000
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true

extraLabels: []

extraPorts: []
# - name: wss
#   port: 8765

extraEnvs: []
# - name: A_TOKEN
#   valueFrom:
#     secretKeyRef:
#       name: my-secret
#       key: a-token

secretVolumes: []

persistence:
  {}
  # backup:
  #   persistentVolumeClaim: true
  #   claimName: externally-created-pvc-claim
  #   size: 100Mi
  #   mountPath: /backups/
  #   storageClassName: netapp-block-standard
  #   storageAccessMode: ReadWriteOnce
  # tempspace:
  #   mountPath: /tempspace

config:
  []
  # - filename: index.html
  #   mountPath: /usr/share/nginx/html/index.html
  #   contents: |
  #     <html><body>My web service</body></html>
  # - filename: nginx.conf
  #   mountPath: /etc/nginx/nginx.conf
  #   contents: |
  #     worker_processes  1;
  #     error_log  /tmp/error.log;
  #     pid        /tmp/nginx.pid;
  #     worker_rlimit_nofile 8192;

  #     events {
  #       worker_connections  1024;
  #     }

  #     http {
  #         client_body_temp_path /tmp/client_temp;
  #         proxy_temp_path       /tmp/proxy_temp_path;
  #         fastcgi_temp_path     /tmp/fastcgi_temp;
  #         uwsgi_temp_path       /tmp/uwsgi_temp;
  #         scgi_temp_path        /tmp/scgi_temp;

  #         server {
  #           listen       8000;
  #           root         /usr/share/nginx/html;
  #         }
  #     }

env:
  {}
  # SOME_ENV_VAR:
  #   value: "var2"
  #   secure: false
  # SOME_SEC_ENV_VAR:
  #   value: "var"
  #   secure: true

tls:
  enabled: false
  mountPath: "/etc/tls"
  secretName: ""
  secret:
    server.crt: ""
    server.key: ""
    ca.crt: ""

containerPort: 8000

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

rbac:
  create: false
  rules: []
  # RBAC rules for KUBE_PING
  #  - apiGroups:
  #      - ""
  #    resources:
  #      - pods
  #    verbs:
  #      - get
  #      - list

service:
  type: ClusterIP
  port: 80

livenessProbe:
  {}
  # httpGet:
  #   path: /
  #   port: http
readinessProbe:
  {}
  # httpGet:
  #   path: /
  #   port: http

lifecycle:
  {}
  # preStop:
  #   exec:
  #     command:
  #       - sh
  #       - '-c'
  #       - rm /tmp/ready; sleep 15

ingress:
  enabled: false
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
        # - path: /
        #   pathType: ImplementationSpecific # ImplementationSpecific used by default
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

rollingUpdate:
  maxUnavailable: 33%
  maxSurge: 33%

nodeSelector: {}

tolerations: []

affinity: {}

# initContainers and extraContainers will inherit the following,
# unless overridden:
# - securityContext
# - env
initContainers: {}
extraContainers: {}

useStatefulSet: false

pdb:
  enabled: false
  minAvailable: 1

serviceName: ""

oauthProxy:
  enabled: false
  localUpstream: true
  image:
    repository: quay.io/oauth2-proxy/oauth2-proxy
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: v7.8.1

  resources:
    requests:
      cpu: 50m
      memory: 64Mi
    limits:
      cpu: 100m
      memory: 128Mi

  livenessProbe:
    httpGet:
      path: /ping
      port: proxy

  readinessProbe:
    httpGet:
      path: /ping
      port: proxy

  args:
    - --alpha-config
    - /oauth2-proxy.yaml
    - --config
    - /oauth2-proxy.cfg

  config:
    []
    # - filename: oauth2-proxy.cfg
    #   mountPath: /oauth2-proxy.cfg
    #   contents: |-
    #     cookie_expire="24h"
    #     cookie_refresh="3m"
    #     cookie_secret="abcd1234!@#$$++="
    #     cookie_secure="false"
    #     email_domains="*"
    #     redirect_url="http://app/oauth2/callback"
    #     skip_auth_regex="/__coverage__|/login|/health|/public|/docs|/redirect|/_next|/images|/devportal|/manager|/about|/maintenance|/admin/session|/ds/api|/gw/api|/feed/|/signout|^[/]$"
    #     skip_jwt_bearer_tokens="false"
    #     skip_provider_button='true'
    #     whitelist_domains="keycloak.localtest.me:9081"
    #     redis_connection_url="redis://redis-master:6379"
    #     session_store_type='redis'
    #     redis_password='s3cr3t'
    # - filename: oauth2-proxy.yaml
    #   mountPath: /oauth2-proxy.yaml
    #   yaml:
    #     injectRequestHeaders:
    #       - name: X-Forwarded-Groups
    #         values:
    #           - claim: groups
    #       - name: X-Forwarded-User
    #         values:
    #           - claim: user
    #       - name: X-Forwarded-Email
    #         values:
    #           - claim: email
    #       - name: X-Forwarded-Preferred-Username
    #         values:
    #           - claim: preferred_username
    #       - name: X-Forwarded-Access-Token
    #         values:
    #           - claim: access_token
    #     injectResponseHeaders:
    #       - name: X-Auth-Request-User
    #         values:
    #           - claim: user
    #       - name: X-Auth-Request-Email
    #         values:
    #           - claim: email
    #       - name: X-Auth-Request-Preferred-Username
    #         values:
    #           - claim: preferred_username
    #       - name: X-Auth-Request-Groups
    #         values:
    #           - claim: groups
    #       - name: X-Auth-Request-Access-Token
    #         values:
    #           - claim: access_token
    #     metricsServer:
    #       BindAddress: ""
    #       SecureBindAddress: ""
    #       TLS: null
    #     providers:
    #       - clientID: aps-portal
    #         clientSecret: ""
    #         id: oidc=aps-portal
    #         loginURL: http://keycloak/auth/realms/master/protocol/openid-connect/auth
    #         loginURLParameters:
    #           - default:
    #               - force
    #             name: approval_prompt
    #           - allow:
    #               - pattern: ".*$"
    #             name: kc_idp_hint
    #         oidcConfig:
    #           audienceClaims:
    #             - aud
    #           emailClaim: email
    #           groupsClaim: groups
    #           insecureAllowUnverifiedEmail: true
    #           insecureSkipNonce: true
    #           issuerURL: http://keycloak/auth/realms/master
    #           userIDClaim: email
    #         profileURL: http://keycloak/auth/realms/master/protocol/openid-connect/userinfo
    #         provider: oidc
    #         redeemURL: http://keycloak/auth/realms/master/protocol/openid-connect/token
    #         scope: openid
    #         validateURL: http://keycloak/auth/realms/master/protocol/openid-connect/userinfo
    #     server:
    #       BindAddress: 0.0.0.0:4180
    #       SecureBindAddress: ""
    #       TLS: null
    #     upstreamConfig:
    #       upstreams:
    #         - flushInterval: 1s
    #           id: /
    #           passHostHeader: true
    #           path: /
    #           proxyWebSockets: true
    #           timeout: 30s
    #           uri: http://127.0.0.1:3000
