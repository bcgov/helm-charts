apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "konga.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "konga.name" . }}
    helm.sh/chart: {{ include "konga.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "konga.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "konga.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      volumes:
        - name: app-views-vol
          emptyDir: {}
{{- if .Values.extraVolumes }}
{{ toYaml .Values.extraVolumes | indent 8 }}
{{- end }}
      initContainers:
        - name: {{ .Chart.Name }}-fix-views
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.securityContext.enabled }}
          securityContext:
            runAsUser: {{ .Values.securityContext.runAsUser }}
            fsGroup: {{ .Values.securityContext.fsGroup }}
          {{- end }}
          command:
          - sh
          - -c
          - |
            cp -r /app/views/* /views
          envFrom:
            - configMapRef:
                name: {{ include "konga.fullname" . }}-config
          volumeMounts:
          - mountPath: /views
            name: app-views-vol

{{- if .Values.prepareDatabase }}
        - name: {{ .Chart.Name }}-prepare-db
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.securityContext.enabled }}
          securityContext:
            runAsUser: {{ .Values.securityContext.runAsUser }}
            fsGroup: {{ .Values.securityContext.fsGroup }}
          {{- end }}
          command:
          - sh
          - -c
          - |
            node ./bin/konga.js prepare -a postgres --uri "postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_DATABASE}"
          envFrom:
            - configMapRef:
                name: {{ include "konga.fullname" . }}-config
{{ end}}

      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.securityContext.enabled }}
          securityContext:
            runAsUser: {{ .Values.securityContext.runAsUser }}
            fsGroup: {{ .Values.securityContext.fsGroup }}
          {{- end }}          
          ports:
            - name: http
              containerPort: 1337
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          envFrom:
            - configMapRef:
                name: {{ include "konga.fullname" . }}-config
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /app/views
              name: app-views-vol
{{- if .Values.extraVolumeMounts }}
{{ toYaml .Values.extraVolumeMounts | nindent 12 }}
{{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
