{{- $fullName := include "aps-gateway-ns.fullname" . -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "aps-gateway-ns.fullname" . }}-gw
  annotations:
    "helm.sh/hook": post-install, post-upgrade
    "helm.sh/hook-weight": "5"
  {{- with .Values.annotations }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  ttlSecondsAfterFinished: {{ .Values.job.ttlSecondsAfterFinished }}
  backoffLimit: {{ .Values.job.backoffLimit }}
  manualSelector: true
  selector:
    matchLabels:
      {{- include "aps-gateway-ns.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- if .Values.vault.use }}
        {{- include "aps-gateway-ns.vaultAnnotations" . | nindent 8 }}
        {{- end }}
        checksum/config: {{ toString .Values.config | sha256sum }}
    {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "aps-gateway-ns.selectorLabels" . | nindent 8 }}
        {{- range $index, $val := .Values.extraLabels }}
        {{ $index }}: {{ $val }}
        {{- end }}
    spec:
      {{- with .Values.serviceAccount.name }}
      serviceAccountName: {{ . }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: work-vol
          emptyDir: {}
        - name: config-vol
          configMap:
            name: {{ template "aps-gateway-ns.fullname" . }}-config
            defaultMode: 0644
      containers:
      - name: job
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        command:
        - {{ .Values.shell }}
        - -c
        - |-
          set -e
          {{ if .Values.vault.use }}. /vault/secrets/creds{{ end }}
          cd /work
          curl -s -L -O https://github.com/bcgov/gwa-cli/releases/download/v2.0.15/gwa_Linux_x86_64.tgz
          tar -xzf gwa_Linux_x86_64.tgz
          export HOME=/work
          export PATH=`pwd`:$PATH
          gwa -v
          gwa config set host $GWA_HOST
          gwa config set namespace $NAMESPACE
          gwa login \
            --client-id=${CLIENT_ID} \
            --client-secret=${CLIENT_SECRET}
          gwa apply --debug -i config/gwconfig.yaml
        env:
        {{- range $index, $val := .Values.env }}
        {{- if .secure }}
          - name: {{ $index }}
            valueFrom:
              secretKeyRef:
                name: {{ $fullName }}-secrets
                key: {{ $index | kebabcase }}
          {{- else }}
          - name: {{ $index }}
            value: {{ .value | quote }}
          {{- end }}
          {{- end }}
        volumeMounts:
          - name: work-vol
            mountPath: /work
            readOnly: false
          - name: config-vol
            mountPath: /work/config
            readOnly: true
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
      restartPolicy: {{ .Values.job.restartPolicy }}
